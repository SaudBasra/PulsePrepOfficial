# Generated by Django 5.1.7 on 2025-06-21 05:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('managemodule', '0004_practiceresponse_accuracy'),
        ('questionbank', '0002_question_image'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PracticeSessionNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_topics', models.JSONField(default=list)),
                ('daily_target', models.IntegerField(default=10)),
                ('target_accuracy', models.FloatField(default=80.0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_questions_completed', models.IntegerField(default=0)),
                ('total_correct_answers', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TopicPerformanceSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=100)),
                ('degree', models.CharField(max_length=10)),
                ('year', models.CharField(max_length=3)),
                ('week_start', models.DateField()),
                ('total_questions', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('total_time', models.IntegerField(default=0)),
                ('sessions_count', models.IntegerField(default=0)),
                ('weekly_accuracy', models.FloatField(default=0.0)),
                ('average_time_per_question', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-week_start'],
            },
        ),
        migrations.CreateModel(
            name='TopicRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=10)),
                ('year', models.CharField(max_length=3)),
                ('block', models.CharField(max_length=100)),
                ('module', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('topic', models.CharField(max_length=100)),
                ('recommendation_type', models.CharField(choices=[('review', 'Review'), ('practice', 'Practice'), ('master', 'Master'), ('catch_up', 'Catch Up')], max_length=20)),
                ('priority_score', models.FloatField(default=0.0)),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_viewed', models.BooleanField(default=False)),
                ('is_acted_upon', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField()),
            ],
            options={
                'ordering': ['-priority_score', '-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='practiceresponse',
            name='accuracy',
        ),
        migrations.AddField(
            model_name='practiceresponse',
            name='attempt_count',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='practiceresponse',
            name='marked_for_review',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='practicesession',
            name='accuracy',
            field=models.DecimalField(decimal_places=1, default=0.0, max_digits=5),
        ),
        migrations.AddField(
            model_name='practicesession',
            name='current_question_index',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='practicesession',
            name='last_activity',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='studentprogress',
            name='consecutive_correct',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='studentprogress',
            name='longest_streak',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='studentprogress',
            name='total_time_spent',
            field=models.IntegerField(default=0),
        ),
        migrations.AddIndex(
            model_name='practiceresponse',
            index=models.Index(fields=['session', 'is_correct'], name='managemodul_session_8d7853_idx'),
        ),
        migrations.AddIndex(
            model_name='practiceresponse',
            index=models.Index(fields=['question', 'is_correct'], name='managemodul_questio_765df4_idx'),
        ),
        migrations.AddIndex(
            model_name='practicesession',
            index=models.Index(fields=['student', 'status'], name='managemodul_student_94d23e_idx'),
        ),
        migrations.AddIndex(
            model_name='practicesession',
            index=models.Index(fields=['topic', 'degree', 'year'], name='managemodul_topic_2bbbc9_idx'),
        ),
        migrations.AddIndex(
            model_name='studentprogress',
            index=models.Index(fields=['student', 'mastery_level'], name='managemodul_student_7ad1e8_idx'),
        ),
        migrations.AddIndex(
            model_name='studentprogress',
            index=models.Index(fields=['student', 'best_accuracy'], name='managemodul_student_f90cc4_idx'),
        ),
        migrations.AddIndex(
            model_name='studentprogress',
            index=models.Index(fields=['topic', 'mastery_level'], name='managemodul_topic_1698dc_idx'),
        ),
        migrations.AddField(
            model_name='practicesessionnote',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionbank.question'),
        ),
        migrations.AddField(
            model_name='practicesessionnote',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_notes', to='managemodule.practicesession'),
        ),
        migrations.AddField(
            model_name='studyplan',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_plans', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='topicperformancesummary',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='topicrecommendation',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_recommendations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='practicesessionnote',
            unique_together={('session', 'question')},
        ),
        migrations.AlterUniqueTogether(
            name='topicperformancesummary',
            unique_together={('student', 'topic', 'week_start')},
        ),
        migrations.AddIndex(
            model_name='topicrecommendation',
            index=models.Index(fields=['student', 'is_viewed'], name='managemodul_student_c2b11f_idx'),
        ),
        migrations.AddIndex(
            model_name='topicrecommendation',
            index=models.Index(fields=['recommendation_type', 'priority_score'], name='managemodul_recomme_d90c44_idx'),
        ),
    ]
